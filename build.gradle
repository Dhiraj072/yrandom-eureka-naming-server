buildscript {
	ext {
		springBootVersion = '2.0.5.RELEASE'
	}
	repositories {
		mavenCentral()
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
		classpath "jp.classmethod.aws:gradle-aws-plugin:0.+"
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "jp.classmethod.aws.beanstalk"

group = 'com.github.dhiraj072.eureka'
version = '0.0.1-SNAPSHOT'
ext.artifactId = 'yrandom-eureka-naming-server'
ext.timestamp = new Date().format("yyyyMMdd'_'HHmmss", TimeZone.default)
ext.versionDesc = "${version}-${timestamp}"

ext.defaultEncoding = 'UTF-8'
sourceCompatibility = targetCompatibility = 1.8
tasks.withType(AbstractCompile) each {
	it.options.encoding = ext.defaultEncoding
}

repositories {
	mavenCentral()
}

ext {
	springCloudVersion = 'Finchley.SR1'
}

dependencies {
	implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-server')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

// Requires AWS_SECRET_ACCESS_KEY and AWS_ACCESS_KEY_ID env set
aws {
	region = "ap-southeast-1"
}

beanstalk {
	appName "yrandom-eureka-naming-server"
	appDesc "yrandom-eureka-naming-server"

	version {
		label = "yrandom-eureka-naming-server-${versionDesc}"
		description = "${artifactId} v${version}"
		bucket = "elasticbeanstalk-${aws.region}-${aws.accountId}"
		key = "eb-apps/${artifactId}/${artifactId}-${versionDesc}.zip"
	}

	configurationTemplates {
		production {
			optionSettings = file("src/main/eb/production.json")
			solutionStackName = "64bit Amazon Linux 2018.03 v2.7.8 running Java 8"
		}
	}

	environment {
		envName = "yrandom-eureka-naming-server"
		envDesc = "yrandom-eureka-naming-server"
		templateName = "production"
		versionLabel = "yrandom-eureka-naming-server-${versionDesc}"
		tags = [
				VERSION: "${versionDesc}".toString(),
				GROUP: "Eng"
		]
	}
}

task createBundle(type: Zip) {
	archiveName = jar.archiveName.substring(0, jar.archiveName.length() - 4) + ".zip"
	from tasks.bootJar
}

task uploadBundle(type: jp.classmethod.aws.gradle.s3.AmazonS3FileUploadTask, dependsOn: createBundle) {
		group "AWS"
		description "Upload ${artifactId} application bundle file to S3."

		bucketName "elasticbeanstalk-${aws.region}-${aws.accountId}"
		key "eb-apps/${artifactId}/${artifactId}-${versionDesc}.zip"
		file project.createBundle.archivePath
		overwrite project.version.endsWith("-SNAPSHOT")
	}

awsEbCreateApplicationVersion.dependsOn uploadBundle
